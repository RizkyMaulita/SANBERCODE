<?php

/* Nomor 1
Manakah cara yang benar untuk menuliskan komentar di PHP 
	-- /*...*/
	<comment>...</comment>
	*\...\*
	<!--...-->

/* Nomor 2
Bagaimana cara memasukkan data orang baru dengan nama belakang (LastName) "Olsen" menggunakan SQL ?
	INSERT ('Olsen') INTO Persons (LastName)
	INSERT INTO Persons ('Olsen') INTO LastName
	--INSERT INTO Persons (LastName) VALUES ('Olsen')

Nomor 3
Manakah di antara nama variabel berikut yang TIDAK valid di PHP ?
	$myVar
	--$my-Var
	$my_Var

Nomor 4
Apakah nama fungsi di PHP untuk menghitung panjang dari sebuah string ?
	--strlen()
	str_word_count()
	strrev()

Nomor 5
Diketahui sebuah array $numbers = [75, 80, 60]; Manakah cara yang tepat jika ingin menambahkan angka 100 ke dalam array $numbers di posisi indeks paling belakang (tanpa menggantikan isi dari array yang sudah ada)?
	$numbers->[3] = 100;
	--$numbers[] = 100;
	$numbers[0] = 100;
	$numbers += 100;

Nomor 6
Perhatikanlah ketiga variabel di bawah ini, manakah di antara pilihan jawaban yang bernilai true (benar) ?
	namaSiswa[2] == "b" || $namaSiswa[3] == "d"
	--strlen($namaSiswa) <= 5 && $namaSiswa[strlen($namaSiswa)-1] == "h"
	count($challenges) > 4
	count($grade) == 4 || $namaSiswa[3] == "d"
	$challenges[1] == "dom" && $grade[1] = 85

Nomor 7
Jika kita ingin membuat array asosiatif yang memuat data seorang murid yang memiliki nama "Adrian", alamat "Bandung" , gender "Laki-laki" , manakah cara yang tepat di bawah ini?
	--$murid = ["nama" => "Adrian", "alamat" => "Bandung", "gender" => "Laki-laki"]
	$murid->nama = Adrian; $murid->alamat = "Bandung"; $murid->gender = "Laki-laki"
	$murid =[ ["nama", "Adrian], ["alamat", "Bandung"], ["gender", "Laki-laki"] ]
	$murid = [ ["nama", "alamat", "gender"], ["Adrian", "Bandung", "Laki-laki"] ]

Nomor 8
Bagaimana cara instantiasi atau pembuatan object baru Factory dengan properti nama "kahutex" yang benar di bawah ini?
	--$kahutex = new Factory("kahutex")
	Factory("kahutex")
	class Factory {"kahutex" }

Nomor 9
Bagaimana sintax SQL yang benar untuk mendapatkan data seluruh kolom pada tabel dengan nama "Persons" ?
	--SELECT * FROM Persons
	SELECT [all] FROM Persons
	SELECT *.Persons
	SELECT Persons

Nomor 10
Tulislah SQL untuk mendapatkan data seluruh kolom dari tabel "Persons" yang nama nya berawalan huruf "a" ?
	SELECT * FROM Persons WHERE FirstName LIKE '%a%'
	SELECT * FROM Persons WHERE FirstName LIKE '%a'
	--SELECT * FROM Persons WHERE FirstName LIKE 'a%'
	SELECT * FROM Persons WHERE FirstName='a'

Nomor 11
SQL untuk mencari data dari table Persons yang memiliki FirstName Peter dan LastName Jackson ?
	SELECT FirstName='Peter', LastName='Jackson' FROM Persons
	SELECT * FROM Persons WHERE FirstName<>'Peter' AND LastName<>'Jackson'
	SELECT * FROM Persons WHERE FirstName='Peter' OR LastName='Jackson'
	--SELECT * FROM Persons WHERE FirstName='Peter' AND LastName='Jackson'

Nomor 12
sintaks SQL untuk menyusun data baik ASCENDING atau DESCENDING ?
	SORT BY
	ORDER
	--ORDER BY
	SORT

Nomor 13
Buatlah sebuah function hitung() yang menerima satu parameter berupa string. Function akan menghitung hasil sesuai string tersebut dan mengembalikan nilai hasil perhitungannya. String tersebut hanya menerima 1 operasi perhitungan saja yaitu operasi sebagai berikut: (*) perkalian, (:) pembagian, (+) penjumlahan, (-) pengurangan, dan (%) modulus.
ATURAN : Wajib menyertakan pseudocode atau algoritma sederhana menggunakan list langkah pengerjaan. Jika kode berjalan tapi tidak menyertakan algoritma/pseudcode maka poin gugur. DILARANG menggunakan function eval() .

/* algoritma sederhana -> 
1. input string
2. buat looping dalam string tersebut, untuk menentukan index keberapa operator matematika berada.
3. memisahkan angka pertama dengan angka kedua menggunakan substring, dengan batasan index operator tersebut.
4. gunakan fungsi switch-case untuk melakukan operasi matematika, dan hasil switch-case tersebut yang akan menjadi output. */
/* 
function hitung_angka($string) {
    $operator = "";
    $in= "";
    for ($i = 0; $i < strlen($string); $i++){
        if (($string[$i]=='*') || ($string[$i]==':') ||($string[$i]=='+')|| ($string[$i]=='-')||($string[$i]=='%')){
            $in = $i;
            $operator = $string[$i];
        }
    }
    $num = substr($string, 0, $in);
    $num1 = substr($string, ($in+1), (strlen($string)- $in - 1));
    switch ($operator){
       case "*": $hasil = $num * $num1; break;
       case ":": $hasil = $num / $num1; break;
       case "+": $hasil = $num + $num1; break;
       case "-": $hasil = $num - $num1; break;
       case "%": $hasil = $num % $num1; break;
    }
    return $hasil;
}
echo hitung_angka('100*2')."<br>";
echo hitung_angka("2+3")."<br>";
echo hitung_angka('100:25')."<br>";
echo hitung_angka('10%2')."<br>";
echo hitung_angka('99-2')."<br>";

Nomor 14
Buatlah sebuah function perolehan_medali() yang menerima satu parameter berupa array multidimensi yang berisi nama negara dan perolehan medali. function akan menghitung jumlah medali emas, perak dan perunggu per negara. function akan me-return sebuah array berisi array asosiatif per-negara disertai jumlah masing-masing perolehan medal. jika tidak ada data pada array yang diinputkan di parameter, maka function me-return "no data"
Total Poin 10 : Pseudocode/Algoritma (3 poin) + Jawaban benar/kode berjalan (7 poin)
10 points

/* algoritma -> 
1. cek kondisi, jika parameternya berupa array kosong, maka akan mengeluarkan output no data, jika tidak, maka program dilanjutkan.
2. buat array key dan array kosong untuk menampung hasil;
3. buat looping sebanyak panjang array input
4. cek kondisi jika di dalam input ada nama negara, maka akan dimasukan ke dalam array hasil, key = 0
5. cek medali dilakukan bersamaan di dalam cek kondisi untuk setiap negara. dan akan dilakukan increment untuk setiap medalinya, dan hasilnya di masukkan ke array hasil, key = 1/2/3 tergantung medalinya. 
6. pasti akan ada negara yang tidak punya medali, maka dibuat looping dimana jika isi dari array tersebut kosong, maka akan diisi dengan 0. */
/* 
print_r(perolehan_medali(
    array(
        array('Indonesia', 'emas'),
        array('India', 'perak'),
        array('Korea Selatan', 'emas'),
        array('India', 'perak'),
        array('India', 'emas'),
        array('Indonesia', 'perak'),
        array('Indonesia', 'emas')
    )
    ));
print_r(perolehan_medali([]));
function perolehan_medali($arr){
    // $hasil = [];
    if ($arr == []){
        $hasil = 'no data';
    } else{ 
    $arr2 = ['negara','emas','perak','perunggu'];
    $hasil = [];
    for($i=0; $i<count($arr); $i++) {
        if($arr[$i][0] == 'Indonesia'){
            $hasil[0][$arr2[0]] = 'Indonesia';
            if($arr[$i][1] == 'emas') {
                $hasil[0][$arr2[1]] += 1;
            } else if($arr[$i][1] == 'perak') {
                $hasil[0][$arr2[2]] += 1;
            } else if($arr[$i][1] == 'perunggu') {
                $hasil[0][$arr2[3]] += 1;
            }
        }
        if($arr[$i][0] == 'India'){
            $hasil[1][$arr2[0]] = 'India';
            if($arr[$i][1] == 'emas') {
                $hasil[1][$arr2[1]] += 1;
            } else if($arr[$i][1] == 'perak') {
                $hasil[1][$arr2[2]] += 1;
            } else if($arr[$i][1] == 'perunggu') {
                $hasil[1][$arr2[3]] += 1;
            }
        }
        if($arr[$i][0] == 'Korea Selatan'){
            $hasil[2][$arr2[0]] = 'Korea Selatan';
            if($arr[$i][1] == 'emas') {
                $hasil[2][$arr2[1]] += 1;
            } else if($arr[$i][1] == 'perak') {
                $hasil[2][$arr2[2]] += 1;
            } else if($arr[$i][1] == 'perunggu') {
                $hasil[2][$arr2[3]] += 1;
            }
        }
    }
    for($i = 0; $i < 3; $i++){
        for($j = 0; $j < 4; $j++){
            if ($hasil[$i][$arr2[$j]] == ''){
                $hasil[$i][$arr2[$j]] = 0;
            }
        }
    }
   }
    return $hasil;
}

Nomor 15
Tulislah sintaks SQL untuk membuat tabel-tabel berikut: 1. table customers ( id integer auto increment primary key, name varchar(255), email varchar 255); 2. table orders (id integer auto increment primary key, amount integer, customer_id integer foreign key references id on customers).
CREATE TABLE customers( 
    id INT AUTO_INCREMENT PRIMARY KEY, 
    name VARCHAR(255)  ,
    email VARCHAR(255)  , 
    password VARCHAR(255) );
CREATE TABLE orders (
    id INT PRIMARY KEY AUTO_INCREMENT, 
    amount INT,
    customers_id INT,
    FOREIGN KEY (customers_id) REFERENCES customers(id)
  )

Nomor 16
Bersambung dari soal sebelumnya (SQL)Tulislah sintaks SQL untuk menambahkan data pada tabel orders dan customers seperti pada gambar berikut:

INSERT INTO customers (id, name, email, password) VALUES ('1', 'John Doe', 'john@doe.com', 'john123'), ('2', 'Jane Doe', 'jane@doe.com', 'jenita123');

INSERT INTO orders (id, amount, customers_id) VALUES ('1', '500', '1'), ('2', '200', '2'), ('3', '750', '2'), ('4', '250', '1'), ('5', '400', '2');


Nomor 17
(melanjutkan dari soal SQL sebelumnya): tulislah sebuah sintaks SQL untuk mendapatkan data yang menghitung total belanja dari setiap customer. ilustrasi nya seperti berikut

SELECT 
    customers.name,
    sum(amount) total_amount
FROM orders 
JOIN customers on customers.id = orders.customers_id group by customers.name
*/
